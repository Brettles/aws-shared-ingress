AWSTemplateFormatVersion: 2010-09-09
Description: Application workload template - deploys an autoscaling group that registered with the load balancer from the application VPC template.

Parameters:
  ApplicationName:
    Type: String
    Description: Name of this application
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Description: Latest Amazon Linux AMI id
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'
 
Resources:
  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: 2
      MinSize: 2
      TargetGroupARNs:
      - Fn::ImportValue:
          !Sub '${ApplicationName}-NLBTargetGroupARN'
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub '${ApplicationName}-ApplicationSubnetOneId'
      - Fn::ImportValue:
          !Sub '${ApplicationName}-ApplicationSubnetTwoId'
      Tags:
      - Key: Name
        Value: !Ref ApplicationName
        PropagateAtLaunch: True

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'Enable access to ${ApplicationName} EC2 instances'
      VpcId:
        Fn::ImportValue:
          !Sub '${ApplicationName}-VPCId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub '${ApplicationName}-NLBSGId'
      Tags:
      - Key: Name
        Value: !Sub '${ApplicationName}-EC2'

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: 't3.nano'
        SecurityGroupIds:
        - !Ref EC2SecurityGroup
        BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeType: 'gp3'
            VolumeSize: 8
            Iops: 3000
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            cd /home/ec2-user
            cat > index.html << END
            <html>
              <head>
                <title>Test Page</title>
              </head>
              <body>
                <h1>Nothing to see here - move along</h1>
                <div>Although this proves the web server is working</div>
                <div>${AWS::StackName}</div>
                <div>HOSTNAME<div>
              </body>
            </html>
            END
            sed -i s/HOSTNAME/`hostname`/ index.html
            nohup python3 -m http.server 80 >/dev/null 2>&1 &
      TagSpecifications:
      - ResourceType: 'launch-template'
        Tags:
        - Key: Name
          Value: !Ref ApplicationName